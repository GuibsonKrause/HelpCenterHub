image: docker:19.03.12

services:
  - docker:19.03.12-dind

stages:
  - build
  - test
  - package

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: admin
  POSTGRES_DB: helpcenterhub

cache:
  paths:
    - .m2/repository
    - node_modules/

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build_backend:
  stage: build
  script:
    - docker build --target build -t $CI_REGISTRY_IMAGE/backend:latest ./backend/helpcenterhub
    - docker push $CI_REGISTRY_IMAGE/backend:latest

build_frontend:
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG ./frontend/helpcenterhub

test_backend:
  stage: test
  script:
    - docker network create helpcenterhub_network || true
    - docker run --name postgresqldb --network helpcenterhub_network -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_DB=$POSTGRES_DB -d postgres
    - echo "Waiting for PostgreSQL to start..."
    - sleep 10
    - docker pull $CI_REGISTRY_IMAGE/backend:latest
    - docker run --rm --network helpcenterhub_network -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5432/$POSTGRES_DB -e SPRING_DATASOURCE_USERNAME=$POSTGRES_USER -e SPRING_DATASOURCE_PASSWORD=$POSTGRES_PASSWORD $CI_REGISTRY_IMAGE/backend:latest mvn test
    - docker stop postgresqldb
    - docker rm postgresqldb
    - docker network rm helpcenterhub_network

test_frontend:
  stage: test
  script:
    - docker run --rm -e CI=true $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG npm test

package_backend:
  stage: package
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend-package:$CI_COMMIT_REF_SLUG ./backend/helpcenterhub
    - docker create --name temp_container $CI_REGISTRY_IMAGE/backend-package:$CI_COMMIT_REF_SLUG
    - docker cp temp_container:/app/app.jar ./app.jar
    - docker rm temp_container
  artifacts:
    paths:
      - ./app.jar
    expire_in: 1 week

after_script:
  - echo "Pipeline completed."
